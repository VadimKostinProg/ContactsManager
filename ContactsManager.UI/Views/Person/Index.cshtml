@model IEnumerable<PersonResponse>

@{
    ViewBag.Title = "Persons";
}

<form href="~/persons/index" method="get">
    <div class="flex">
        <div class="flex-1">
            <div class="text-grey">
                <span>Contacts</span>
                <i class="fa-solid fa-caret-right"></i>
                <span class="text-grey">Persons</span>
            </div>
        </div>

        <div class="flex-1 text-right">
            <a href="~/persons/create" class="button-link button-blue-back">Create Person</a>

            <a href="~/persons/PersonsPDF?searchBy=@(ViewBag.CurrentSearchBy)&searchString=@(ViewBag.CurrentSearchString)&gender=@(ViewBag.CurrentGender)&sortBy=@(ViewBag.CurrentSortBy)" class="button-link button-blue-back ml">Download as PDF</a>

            <a href="~/persons/PersonsExcel" class="button-link button-blue-back ml">Download as Excel</a>
        </div>
    </div>

    <div class="table-container">
        <div class="flex">
            <div class="flex-1">
                <h1>Persons</h1>
            </div>
            <div class="flex-3 text-right">
                <label>Search by:</label>

                <select class="search-dropdown" name="searchBy" style="width: 200px">
                    @foreach (var field in ViewBag.SearchFields)
                    {
                        if (field.Key == ViewBag.CurrentSearchBy)
                        {
                            <option value="@field.Key" selected="selected">@field.Value</option>
                        }
                        else
                        {
                            <option value="@field.Key">@field.Value</option>
                        }

                    }
                    @* Eg: searchBy=PersonName&searchString=abc *@
                </select>

                <input type="search" id="Search" class="search-text" placeholder="Search" name="searchString" value="@ViewBag.CurrentSearchString" style="width:200px" />
                <button class="search-button">Search</button>
                
                @foreach(string gender in ViewBag.Genders)
                {
                    if(gender == ViewBag.CurrentGender)
                    {
                        <input type="radio" name="gender" value="@gender" checked="checked" />
                        <label for="gender">@gender</label>
                    }
                    else
                    {
                        <input type="radio" name="gender" value="@gender" />
                        <label for="gender">@gender</label>
                    }
                }

                

                <a href="~/persons/index" class="ml link-hover">Clear all</a>
            </div>
        </div>

        <table class="table w-100 mt persons">
            <thead>
                <tr>
                    @await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData) {
                    {"ColumnName", nameof(PersonResponse.Name)},
                    {"DisplayName", "Name"}
                    })
                    @await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData) {
                    {"ColumnName", nameof(PersonResponse.Email)},
                    {"DisplayName", "Email"}
                    })
                    @await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData) {
                    {"ColumnName", nameof(PersonResponse.DateOfBirth)},
                    {"DisplayName", "Date of birth"}
                    })
                    @await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData) {
                    { "ColumnName", nameof(PersonResponse.Age) },
                    { "DisplayName", "Age" }
                    })
                    <th>Gender</th>
                    @await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData) {
                    { "ColumnName", nameof(PersonResponse.Country) },
                    { "DisplayName", "Country" }
                    })
                    @await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData) {
                    { "ColumnName", nameof(PersonResponse.Address) },
                    { "DisplayName", "Address" }
                    })
                    @await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData) {
                    { "ColumnName", nameof(PersonResponse.ReceiveNewsLetters) },
                    { "DisplayName", "Receive news letters" }
                    })
                    <th>Options</th>
                </tr>
            </thead>
            <tbody>
                @foreach (PersonResponse person in Model)
                {
                    <tr>
                        <td style="width:10%">@person.Name</td>
                        <td style="width:20%">@person.Email</td>
                        <td style="width:10%">@person.DateOfBirth?.ToString("dd MMM yyyy")</td>
                        <td style="width:6%">@person.Age</td>
                        <td style="width:8%">@person.Gender</td>
                        <td style="width:10%">@person.Country</td>
                        <td style="width:15%">@person.Address</td>
                        <td style="width:8%">@person.ReceiveNewsLetters</td>
                        <td style="width:20%">
                            <a href="~/persons/edit/@person.PersonID" class="button-link button-blue-back">Edit</a>
                            @* /Persons/Edit/1 *@

                            <a href="~/persons/delete/@person.PersonID" class="button-link button-red-back">Delete</a>
                            @* /Persons/Delete/1 *@
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</form>